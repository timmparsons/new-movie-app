create table "public"."movies" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "title" text not null,
    "genre" text not null,
    "director" text,
    "release_year" text,
    "rating" real,
    "description" text,
    "movie_cast" text[],
    "image_uri" text,
    "user_id" uuid
);


alter table "public"."movies" enable row level security;

CREATE UNIQUE INDEX movies_pkey ON public.movies USING btree (id);

alter table "public"."movies" add constraint "movies_pkey" PRIMARY KEY using index "movies_pkey";

alter table "public"."movies" add constraint "movies_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."movies" validate constraint "movies_user_id_fkey";

grant delete on table "public"."movies" to "anon";

grant insert on table "public"."movies" to "anon";

grant references on table "public"."movies" to "anon";

grant select on table "public"."movies" to "anon";

grant trigger on table "public"."movies" to "anon";

grant truncate on table "public"."movies" to "anon";

grant update on table "public"."movies" to "anon";

grant delete on table "public"."movies" to "authenticated";

grant insert on table "public"."movies" to "authenticated";

grant references on table "public"."movies" to "authenticated";

grant select on table "public"."movies" to "authenticated";

grant trigger on table "public"."movies" to "authenticated";

grant truncate on table "public"."movies" to "authenticated";

grant update on table "public"."movies" to "authenticated";

grant delete on table "public"."movies" to "service_role";

grant insert on table "public"."movies" to "service_role";

grant references on table "public"."movies" to "service_role";

grant select on table "public"."movies" to "service_role";

grant trigger on table "public"."movies" to "service_role";

grant truncate on table "public"."movies" to "service_role";

grant update on table "public"."movies" to "service_role";

create policy "Enable read access for all users"
on "public"."movies"
as permissive
for select
to public
using (true);



